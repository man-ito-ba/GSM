# Projet

Il va falloir proposer à un client une option avec un module GSM. 
Tu transmet des SMS lorsque tu as un état bas ou haut sur une entrée de l’arduino par exemple.

## Instructions

1er projet : on reçoit une notification de défaut système. Ex. : 

- une batterie est déchargée
- un piston qui est en vrille
- un tube UV a lâché

Ensuite, le défaut est remonté sur l'arduino, et en fonction de :

- son origine
- sa gravité

On envoie un message sur un numéro de téléphone du type : 

> "Attention, réf. XXX, erreur YYY"

## Matériel à utiliser

Arduino de base (voir sinon la Méga si on a besoin de plus de pins)

## Optionnel

Il serait bien de pouvoir :

1. Envoyer un message pour commander une lecture d'état de tubes UV (cet état est une constante définie lors de la mise en route de l'utilisation du tube UV, et qui effectue un décompte des heures d'utilisation via un Arduino)
2. Un texto pourrait être renvoyé avec le nb d'heures restantes.

De plus, le système pourrait envoyer un message toutes les 1000 heures d'utilisations, du type : 

> "Machine X, tube UV n°Y : Reste Z heures d'utilisation"

### Encore plus optionnel 

Peut envoyer ces messages sur internet, pour ensuite créer une sorte de page récapitulative ? Ou alors via Filemaker ? Est-ce compliqué ?


------

## Notes
1. Pour identifier les machines, est-ce que je vais devoir coder chaque machine avec un nom basé sur son identifiant ? Ou alors avoir une base de donnée chez le client, qui identifie la machine qui prend contacte avec le client et traduit l'ID naturel de la machine par le nom que le client souhaite lui donner ? La première solution semble plus intéressante, moins compliquée, mais compliquée quand même... Parce que si le client ne veut pas juste recevoir des n° de machines incompréhensibles (ce qui serait le plus simple pour moi : chaque modem a son propre ID qui pourrait être récupéré j'imagine et envoyé tel quel), il va falloir que je dise à chaque modem "voici ton identifiant compréhensible", et que le client l'installe au bon endroit ! Imaginons que je lui vende 2 arduions+modem GSM, et qu'il les mélange... :/

------

160815 Orange Carte Prépayée OM
n° 07 85 69 66 49
IMEI 861074029232934
Bande GSM : GSM850_EGSM_DCS_PCS_MODE

## Infos générales sur le shield GSM 2
- Se connecte à internet via le réseau sans fil GPRS
- pins 2 & 3 pour la communication SERIAL avec le M10
- pin 7 pour le RESET
- M10 : 
	- modem radio GPRS quadribandes (Quad-band GSM/GPRS) qui fonctionne aux fréquences suivantes :
		- GSM850MHz
		- GSM900MHz
		- DCS1800MHz
		- PCS1900MHz
	- Accepte les protocoles TCP/UDP & HTTP par une connection GPRS
	- vitesses d'envoi et réception par le GPRS : 85.6 kbps max
- La révision la plus récente du shield GSM utilises le pinout 1.0 sur la rév. 3 de l'Arduino UNO
- Alimentation : 
	- source externe entre 700mA et 1000mA (recommandé)
	- port USB Ø recommandé : ne peut pas fournir courant requis lorsque le modem est en utilisation intensive
		- 2A de courant au pic d'utilisation, par ex. lors de transmission de données ; ce courant est fourni par le capacitor orange présent sur le shied
- Leds de statut : 
	- On     = shield alimenté
	- Status = s'allume quand le modem est alimenté et que des données sont transférées à/du réseau GSM/GPRS
	- Net    = Clignote lorsque le modem communique avec le réseau radio
- boutons :
	- reset : connecté au pin RESET de l'arduino
	- power : connecté au modem et allume/éteint le modem

sources : http://fr.hobbytronics.co.uk/arduino-gsm-shield-2